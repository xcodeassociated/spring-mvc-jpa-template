import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jetbrains.kotlin.jvm' version '2.0.20'
	id 'org.jetbrains.kotlin.plugin.spring' version '2.0.20'
	id 'org.jetbrains.kotlin.plugin.jpa' version '2.0.20'
	id "org.jetbrains.kotlin.kapt" version "2.0.20"
	id "org.liquibase.gradle" version "2.2.1"
	id "com.google.osdetector" version "1.7.3"
	id 'groovy'
}

group = 'com.softeno'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', '1.20.1')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// monitoring
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// testcontainers
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:spock'
	testImplementation 'org.testcontainers:postgresql'

	// spock
	testImplementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.21', ext: 'pom'
	testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.4-M4-groovy-4.0'
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.4-M4-groovy-4.0'

	// guerydsl
	implementation 'com.querydsl:querydsl-jpa:5.1.0'
	kapt group: 'com.querydsl', name: 'querydsl-apt', version: '5.1.0', classifier: 'jakarta'

	// liquibase
	implementation ('org.liquibase:liquibase-core:4.29.2') {
		exclude group: 'javax.xml.bind', module: 'jaxb-receiver'
		exclude group: 'org.liquibase.ext', module: 'liquibase-hibernate5'
	}
	liquibaseRuntime 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	liquibaseRuntime 'org.jetbrains.kotlin:kotlin-reflect'
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate6:4.29.2'
	liquibaseRuntime 'org.postgresql:postgresql:42.7.4'
	liquibaseRuntime 'ch.qos.logback:logback-core:1.5.8'
	liquibaseRuntime 'ch.qos.logback:logback-classic:1.5.8'
	liquibaseRuntime 'info.picocli:picocli:4.7.6'
	liquibaseRuntime "org.springframework.boot:spring-boot-starter-data-jpa:3.3.1"
	liquibaseRuntime sourceSets.main.output

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// circuit breaker
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:3.1.2'

	// macOs ARM only
	if (osdetector.classifier == "osx-aarch_64") {
		runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.113.Final:${osdetector.classifier}")
	}

	// springdoc
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.6.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

}
liquibase {
	activities {
		main {
			changeLogFile "$projectDir/src/main/resources/db/changesets/changelog.yml"
			url "jdbc:postgresql://localhost:5432/application"
			username "admin"
			password "admin"
			driver 'org.postgresql.Driver'
			referenceUrl 'hibernate:spring:com.softeno.template?dialect=org.hibernate.dialect.PostgreSQL95Dialect&hibernate.use_jdbc_metadata_defaults=true&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
			referenceDriver 'liquibase.ext.hibernate.database.connection.HibernateDriver'
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

compileTestGroovy {
	dependsOn tasks.getByPath('compileTestKotlin')
	classpath += files(compileTestKotlin)
}

tasks.named('test') {
	useJUnitPlatform()
}
